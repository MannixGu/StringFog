// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: (rootProject.projectDir.path + '/buildscript/import.gradle')

buildscript {
    project.ext.load = { path ->
        Reader reader = new File(project.rootDir.getPath(), path).newReader()
        def config = new Properties()
        config.load(reader)
        reader.close()

        return config
    }

    def ps = load('use.properties')

    if (ps['maven.url'] == null) {
        throw new GradleException(
                '''                            未配置仓储信息
                            请在local.properties中配置maven相关信息
                                maven.url=xxx
                                maven.snaUrl=xxx
                                maven.userName=xxx
                                maven.userPass=xxx
        ''')
    }

    repositories {
        google()
        mavenCentral()
        mavenLocal()

        maven {
            allowInsecureProtocol true
            url uri(ps['maven.url'])
            credentials {
                username = ps['maven.userName']
                password = ps['maven.userPass']
            }
        }

        maven {
            allowInsecureProtocol true
            url uri(ps['maven.snaUrl'])
            credentials {
                username = ps['maven.userName']
                password = ps['maven.userPass']
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath 'fast.build:fast.plugin:v0.10.7.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()

        maven {
            allowInsecureProtocol true
            url "http://nexus.fxbusiness.cn/repository/maven-releases/"
        }

        maven {
            allowInsecureProtocol true
            url "http://nexus.fxbusiness.cn/repository/maven-snapshots/"
        }
    }

    afterEvaluate {
        products {
            maven {
                if (params['mavenUrl'] != null) {
                    rc {
                        target = params['mavenUrl']
                        user = params['user']
                        password = params['password']
                    }
                }

                if (params['mavenSnaUrl'] != null) {
                    beta {
                        target = params['mavenSnaUrl']
                        user = params['user']
                        password = params['password']
                    }
                }
            }
        }

        configurations.all {
            resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'// 动态版本  10 min
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'// 快照版本   0 s
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}